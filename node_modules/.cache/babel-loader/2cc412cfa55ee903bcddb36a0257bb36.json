{"ast":null,"code":"var _jsxFileName = \"/home/ad/Bureau/test-adnane/src/App.js\";\n\n/*   Adnane CHEJJARI\n     Janvier 2022\n     Test eFarmz\n     Pour executer : npm start\n     sur le navigateur, merci de changer localhost:3000 en 0.0.0.0:3000\n     l'api imgur ne rÃ©pond pas avec un message 429\n*/\nimport './App.css';\nimport { Component } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchDataFromImgur = () => {\n      // Fetch data from Imgur API, stores the objects needed 2 arrays : this.state.ImgLinks contains the links to the images\n      // this.state.ImgInformations contains informations about the picturess\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", \"Client-ID 2fe36512ef5b8e3\"); // authorization for connection to API\n\n      var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n      };\n      fetch(\"https://api.imgur.com/3/album/\" + this.state.AlbumHash + \"/images\", requestOptions).then(response => response.json()).then(result => {\n        let tmpLink = []; // temporary array to store Links from json response\n\n        let tmpInfo = []; // temporary array to store Informations from json response\n\n        result.data.length > 0 ? this.setState({\n          isDataLoaded: true\n        }) : this.setState({\n          isDataLoaded: false\n        });\n\n        if (this.state.isDataLoaded) {\n          result.data.length > 4 ? this.setState({\n            size: 4\n          }) : this.setState({\n            size: result.data.length\n          }); // we only want 4 pictures from album, if album contains less than 4 images, we display all of it\n\n          for (var i = 0; i < this.state.size; i++) {\n            tmpLink.push(result.data[i].link); // Push link & informations to temporary arrays\n\n            tmpInfo.push(`Id : ${result.data[i].id} | \n                          Title : ${result.data[i].title} |\n                          Description : ${result.data[i].description} | \n                          Type : ${result.data[i].type} | \n                          Views : ${result.data[i].views} | \n                          Vote : ${result.data[i].vote} | \n                          Account Url : ${result.data[i].account_url} | \n                          Account Id : ${result.data[i].account_id} | \n                          Tags : ${result.data[i].tags} | \n                          Width : ${result.data[i].width} | \n                          Height : ${result.data[i].height} | \n                          Name : ${result.data[i].name} | \n                          Link : ${result.data[i].link}`);\n          }\n\n          this.setState({\n            // store temporary objects in the component's state\n            imgLinks: tmpLink,\n            imgInformations: tmpInfo\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          isDataLoaded: false\n        });\n      }); // if the fetch fails, set the 'osDataLoaded' to false\n    };\n\n    this.handleImageClick = () => {\n      // stop the timer and display informations about the picture when the image is clicked by only changing the pause state\n      this.setState({\n        pause: !this.state.pause\n      });\n    };\n\n    this.handleButtonClick = () => {\n      // reset the state of the component, call the fetchDataFromImgur when the search button is pressed\n      this.setState({\n        timer: 10,\n        currentImage: 0,\n        pause: false,\n        isDataLoaded: false,\n        imgLinks: [],\n        imgInformations: [],\n        items: {}\n      });\n\n      if (this.state.AlbumHash != \"\") {\n        this.fetchDataFromImgur();\n\n        if (!this.interval) {\n          this.interval = setInterval(() => this.updateCountDown(), 1000);\n        }\n      }\n    };\n\n    this.handleInputChange = event => {\n      //method to handle the input changes\n      this.setState({\n        AlbumHash: event.target.value\n      });\n    };\n\n    this.state = {\n      items: {},\n      size: 0,\n      currentImage: 0,\n      imgLinks: [],\n      imgInformations: [],\n      pause: false,\n      isDataLoaded: false,\n      timer: 0,\n      AlbumHash: \"\"\n    };\n  }\n\n  updateCountDown() {\n    //Method to update the counter, calls the function that changes the image after 10 seconds\n    if (!this.state.pause && this.state.isDataLoaded) {\n      const tmp = this.state.timer - 1;\n      this.setState({\n        timer: tmp\n      });\n\n      if (this.state.timer == -1) {\n        this.setState({\n          timer: 10\n        });\n        this.changeImage();\n      }\n    }\n  }\n\n  changeImage() {\n    // Change the Image using index : currentImage\n    if (!this.state.pause) {\n      let newCurrentImg = 0;\n      const images = this.state.imgLinks;\n      const currentImg = this.state.currentImage;\n      const noOfImages = images.length;\n\n      if (currentImg !== noOfImages - 1) {\n        newCurrentImg = currentImg + 1;\n      }\n\n      this.setState({\n        currentImage: newCurrentImg\n      });\n      this.updateCountDown(); // update the counter after changing the image\n    }\n  }\n\n  render() {\n    // Render the components in the browser\n    const dataLoaded = this.state.isDataLoaded;\n\n    if (!dataLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Type an Albumhash below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Search\",\n          onClick: this.handleButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Type an Albumhash below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Search\",\n            onClick: this.handleButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Timer : \", this.state.timer, \" Seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.imgLinks[this.state.currentImage],\n            onClick: this.handleImageClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: this.state.pause ? this.state.imgInformations[this.state.currentImage] : 'Click on the Image to show More informations'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ad/Bureau/test-adnane/src/App.js"],"names":["Component","React","App","constructor","props","fetchDataFromImgur","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","state","AlbumHash","then","response","json","result","tmpLink","tmpInfo","data","length","setState","isDataLoaded","size","i","push","link","id","title","description","type","views","vote","account_url","account_id","tags","width","height","name","imgLinks","imgInformations","catch","error","handleImageClick","pause","handleButtonClick","timer","currentImage","items","interval","setInterval","updateCountDown","handleInputChange","event","target","value","tmp","changeImage","newCurrentImg","images","currentImg","noOfImages","render","dataLoaded"],"mappings":"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","sourcesContent":["/*   Adnane CHEJJARI\n     Janvier 2022\n     Test eFarmz\n     Pour executer : npm start\n     sur le navigateur, merci de changer localhost:3000 en 0.0.0.0:3000\n     l'api imgur ne rÃ©pond pas avec un message 429\n*/    \n\nimport './App.css';\nimport { Component } from 'react';\nimport React from 'react';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items : {},\n      size : 0,\n      currentImage : 0,\n      imgLinks : [],\n      imgInformations : [],\n      pause : false, \n      isDataLoaded : false,\n      timer : 0,\n      AlbumHash : \"\",\n    }    \n  };\n\n  updateCountDown(){\n    //Method to update the counter, calls the function that changes the image after 10 seconds\n      if (!this.state.pause && this.state.isDataLoaded){\n        const tmp = this.state.timer - 1;\n        this.setState({timer : tmp});\n        if (this.state.timer == -1){\n          this.setState({timer : 10})\n          this.changeImage();\n        }\n    }\n  }\n\n  fetchDataFromImgur = () => {\n    // Fetch data from Imgur API, stores the objects needed 2 arrays : this.state.ImgLinks contains the links to the images\n    // this.state.ImgInformations contains informations about the picturess\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Client-ID 2fe36512ef5b8e3\"); // authorization for connection to API\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(\"https://api.imgur.com/3/album/\"+this.state.AlbumHash+\"/images\", requestOptions)\n      .then(response => response.json())\n      .then((result) => {\n        let tmpLink = [];   // temporary array to store Links from json response\n        let tmpInfo = [];   // temporary array to store Informations from json response\n        result.data.length > 0 ? this.setState({isDataLoaded : true}) : this.setState({isDataLoaded : false})\n        if (this.state.isDataLoaded){\n        result.data.length > 4 ? this.setState({size : 4}) : this.setState({size : result.data.length})\n        // we only want 4 pictures from album, if album contains less than 4 images, we display all of it\n        for (var i = 0; i < this.state.size; i++) {\n            tmpLink.push(result.data[i].link); // Push link & informations to temporary arrays\n            tmpInfo.push(`Id : ${result.data[i].id} | \n                          Title : ${result.data[i].title} |\n                          Description : ${result.data[i].description} | \n                          Type : ${result.data[i].type} | \n                          Views : ${result.data[i].views} | \n                          Vote : ${result.data[i].vote} | \n                          Account Url : ${result.data[i].account_url} | \n                          Account Id : ${result.data[i].account_id} | \n                          Tags : ${result.data[i].tags} | \n                          Width : ${result.data[i].width} | \n                          Height : ${result.data[i].height} | \n                          Name : ${result.data[i].name} | \n                          Link : ${result.data[i].link}`)\n          }\n        this.setState({\n            // store temporary objects in the component's state\n            imgLinks: tmpLink,\n            imgInformations: tmpInfo});\n          }\n        })\n      .catch(error => {this.setState({isDataLoaded:false})}); // if the fetch fails, set the 'osDataLoaded' to false\n\n  }\n\n  changeImage() {\n    // Change the Image using index : currentImage\n    if (!this.state.pause){\n      let newCurrentImg = 0;\n      const images = this.state.imgLinks;\n      const currentImg = this.state.currentImage\n      const noOfImages = images.length;\n\n      if (currentImg !== noOfImages - 1) {\n        newCurrentImg = currentImg + 1;\n      }\n      this.setState({currentImage: newCurrentImg});\n      this.updateCountDown(); // update the counter after changing the image\n    }\n  }\n\n  handleImageClick = () => {\n    // stop the timer and display informations about the picture when the image is clicked by only changing the pause state\n    this.setState({pause : !this.state.pause});\n  }\n\n  handleButtonClick = () => {\n    // reset the state of the component, call the fetchDataFromImgur when the search button is pressed\n    this.setState({timer: 10, currentImage : 0, pause : false, isDataLoaded : false, imgLinks : [], imgInformations : [], items : {}})\n    if (this.state.AlbumHash!=\"\"){\n      this.fetchDataFromImgur()\n      if (!this.interval){\n          this.interval= setInterval(() => this.updateCountDown(), 1000); \n      } \n\n    }\n  }\n\n  handleInputChange = (event) =>{\n    //method to handle the input changes\n    this.setState({AlbumHash : event.target.value})\n  }\n\n  render(){    \n    // Render the components in the browser\n    const dataLoaded = this.state.isDataLoaded;\n    if (!dataLoaded){\n      return (\n        <div className='App'>\n        <h1>Type an Albumhash below</h1>\n        <input type=\"text\" onChange={ this.handleInputChange } />\n        <input\n          type=\"button\"\n          value=\"Search\"\n          onClick={this.handleButtonClick}\n        />\n        </div>\n      );\n    }\n    else{\n    return (\n      <div className='App'>\n        <h1>Type an Albumhash below</h1>\n        <div><input type=\"text\" onChange={ this.handleInputChange }/>\n        <input\n          type=\"button\"\n          value=\"Search\"\n          onClick={this.handleButtonClick}\n        />\n        </div>\n      <div><b>Timer : {this.state.timer} Seconds</b></div>\n      <button><img src={this.state.imgLinks[this.state.currentImage]} onClick={this.handleImageClick}/></button>\n      <div>\n        <b>{this.state.pause ? this.state.imgInformations[this.state.currentImage] : 'Click on the Image to show More informations'}</b>\n      </div>\n      </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}