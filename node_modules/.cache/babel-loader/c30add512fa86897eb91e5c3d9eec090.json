{"ast":null,"code":"var _jsxFileName = \"/home/ad/Bureau/js learning/myapp/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchDataFromImgur = () => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Authorization\", \"Client-ID 2fe36512ef5b8e3\");\n      var requestOptions = {\n        method: 'GET',\n        headers: myHeaders,\n        redirect: 'follow'\n      };\n      fetch(\"https://api.imgur.com/3/album/\" + this.state.AlbumHash + \"/images\", requestOptions).then(response => response.json()).then(result => {\n        let tmpLink = [];\n        let tmpInfo = [];\n        result.data.length > 0 ? this.setState({\n          isDataLoaded: true\n        }) : this.setState({\n          isDataLoaded: false\n        });\n\n        if (this.state.isDataLoaded) {\n          result.data.length > 4 ? this.setState({\n            size: 4\n          }) : this.setState({\n            size: result.data.length\n          });\n\n          for (var i = 0; i < this.state.size; i++) {\n            tmpLink.push(result.data[i].link);\n            tmpInfo.push(`Id : ${result.data[i].id} | \n                          Title : ${result.data[i].title} |\n                          Description : ${result.data[i].description} | \n                          Type : ${result.data[i].type} | \n                          Views : ${result.data[i].views} | \n                          Vote : ${result.data[i].vote} | \n                          Account Url : ${result.data[i].account_url} | \n                          Account Id : ${result.data[i].account_id} | \n                          Tags : ${result.data[i].tags} | \n                          Width : ${result.data[i].width} | \n                          Height : ${result.data[i].height} | \n                          Name : ${result.data[i].name} | \n                          Link : ${result.data[i].link}`);\n          }\n\n          this.setState({\n            imgLinks: tmpLink,\n            imgInformations: tmpInfo\n          });\n        }\n      }).catch(error => {\n        console.log(\"error : \", error);\n        this.setState({\n          isDataLoaded: false\n        });\n      });\n    };\n\n    this.handleImageClick = () => {\n      this.setState({\n        pause: !this.state.pause\n      });\n    };\n\n    this.handleButtonClick = () => {\n      this.setState({\n        AlbumHash: this.state.userInput\n      });\n      console.log(this.state.AlbumHash);\n      this.fetchDataFromImgur();\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n    };\n\n    this.state = {\n      items: {},\n      size: 0,\n      currentImage: 0,\n      imgLinks: [],\n      imgInformations: [],\n      pause: false,\n      isDataLoaded: false,\n      timer: 0,\n      AlbumHash: \"AZAZAZ\",\n      userInput: \"\"\n    };\n  }\n\n  updateCountDown() {\n    if (!this.state.pause && this.state.isDataLoaded) {\n      const tmp = this.state.timer - 1;\n      this.setState({\n        timer: tmp\n      });\n\n      if (this.state.timer == -1) {\n        this.setState({\n          timer: 10\n        });\n        this.changeBackgroundImage();\n      }\n    }\n  }\n\n  componentDidMount() {\n    /*var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Client-ID 2fe36512ef5b8e3\");\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n     fetch(\"https://api.imgur.com/3/album/\"+this.state.AlbumHash+\"/images\", requestOptions)\n      .then(response => response.json())\n      .then((result) => {\n        let tmpLink = [];\n        let tmpInfo = [];\n        result.data.length > 0 ? this.setState({isDataLoaded : true}) : this.setState({isDataLoaded : false})\n        if (this.state.isDataLoaded){\n        result.data.length > 4 ? this.setState({size : 4}) : this.setState({size : result.data.length})\n        for (var i = 0; i < this.state.size; i++) {\n            tmpLink.push(result.data[i].link);\n            tmpInfo.push(`Id : ${result.data[i].id} | \n                          Title : ${result.data[i].title} |\n                          Description : ${result.data[i].description} | \n                          Type : ${result.data[i].type} | \n                          Views : ${result.data[i].views} | \n                          Vote : ${result.data[i].vote} | \n                          Account Url : ${result.data[i].account_url} | \n                          Account Id : ${result.data[i].account_id} | \n                          Tags : ${result.data[i].tags} | \n                          Width : ${result.data[i].width} | \n                          Height : ${result.data[i].height} | \n                          Name : ${result.data[i].name} | \n                          Link : ${result.data[i].link}`)\n          }\n        this.setState({\n            imgLinks: tmpLink,\n            imgInformations: tmpInfo});\n          }\n        })\n      .catch(error => {console.log(\"error : \",error); this.setState({isDataLoaded:false})});\n    */\n    if (this.state.isDataLoaded) {\n      this.interval = setInterval(() => this.updateCountDown(), 1000);\n    }\n  }\n\n  changeBackgroundImage() {\n    if (!this.state.pause) {\n      let newCurrentImg = 0;\n      const images = this.state.imgLinks;\n      const currentImg = this.state.currentImage;\n      const noOfImages = images.length;\n\n      if (currentImg !== noOfImages - 1) {\n        newCurrentImg = currentImg + 1;\n      }\n\n      this.setState({\n        currentImage: newCurrentImg\n      });\n      this.updateCountDown();\n    }\n  }\n\n  render() {\n    const dataLoaded = this.state.isDataLoaded;\n    console.log(\"is data loaded : \", dataLoaded);\n\n    if (!dataLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Type an Albumhash below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Search\",\n          onClick: this.handleButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Data loading failed, please try again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Type an Albumhash below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\"Timer : 00:0\", this.state.timer, \" Seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.imgLinks[this.state.currentImage],\n            onClick: this.handleImageClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: this.state.pause ? this.state.imgInformations[this.state.currentImage] : 'Click on the Image to show More informations'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ad/Bureau/js learning/myapp/src/App.js"],"names":["Component","React","App","constructor","props","fetchDataFromImgur","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","state","AlbumHash","then","response","json","result","tmpLink","tmpInfo","data","length","setState","isDataLoaded","size","i","push","link","id","title","description","type","views","vote","account_url","account_id","tags","width","height","name","imgLinks","imgInformations","catch","error","console","log","handleImageClick","pause","handleButtonClick","userInput","handleInputChange","event","target","value","items","currentImage","timer","updateCountDown","tmp","changeBackgroundImage","componentDidMount","interval","setInterval","newCurrentImg","images","currentImg","noOfImages","render","dataLoaded"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport React from 'react';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items : {},\n      size : 0,\n      currentImage : 0,\n      imgLinks : [],\n      imgInformations : [],\n      pause : false, \n      isDataLoaded : false,\n      timer : 0,\n      AlbumHash : \"AZAZAZ\",\n      userInput : \"\"\n    }    \n  };\n\n  updateCountDown(){\n      if (!this.state.pause && this.state.isDataLoaded){\n        const tmp = this.state.timer - 1;\n        this.setState({timer : tmp});\n        if (this.state.timer == -1){\n          this.setState({timer : 10})\n          this.changeBackgroundImage();\n        }\n    }\n  }\n\n  fetchDataFromImgur = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Client-ID 2fe36512ef5b8e3\");\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://api.imgur.com/3/album/\"+this.state.AlbumHash+\"/images\", requestOptions)\n      .then(response => response.json())\n      .then((result) => {\n        let tmpLink = [];\n        let tmpInfo = [];\n        result.data.length > 0 ? this.setState({isDataLoaded : true}) : this.setState({isDataLoaded : false})\n        if (this.state.isDataLoaded){\n        result.data.length > 4 ? this.setState({size : 4}) : this.setState({size : result.data.length})\n        for (var i = 0; i < this.state.size; i++) {\n            tmpLink.push(result.data[i].link);\n            tmpInfo.push(`Id : ${result.data[i].id} | \n                          Title : ${result.data[i].title} |\n                          Description : ${result.data[i].description} | \n                          Type : ${result.data[i].type} | \n                          Views : ${result.data[i].views} | \n                          Vote : ${result.data[i].vote} | \n                          Account Url : ${result.data[i].account_url} | \n                          Account Id : ${result.data[i].account_id} | \n                          Tags : ${result.data[i].tags} | \n                          Width : ${result.data[i].width} | \n                          Height : ${result.data[i].height} | \n                          Name : ${result.data[i].name} | \n                          Link : ${result.data[i].link}`)\n          }\n        this.setState({\n            imgLinks: tmpLink,\n            imgInformations: tmpInfo});\n          }\n        })\n      .catch(error => {console.log(\"error : \",error); this.setState({isDataLoaded:false})});\n  }\n\n  componentDidMount(){\n    /*var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Client-ID 2fe36512ef5b8e3\");\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://api.imgur.com/3/album/\"+this.state.AlbumHash+\"/images\", requestOptions)\n      .then(response => response.json())\n      .then((result) => {\n        let tmpLink = [];\n        let tmpInfo = [];\n        result.data.length > 0 ? this.setState({isDataLoaded : true}) : this.setState({isDataLoaded : false})\n        if (this.state.isDataLoaded){\n        result.data.length > 4 ? this.setState({size : 4}) : this.setState({size : result.data.length})\n        for (var i = 0; i < this.state.size; i++) {\n            tmpLink.push(result.data[i].link);\n            tmpInfo.push(`Id : ${result.data[i].id} | \n                          Title : ${result.data[i].title} |\n                          Description : ${result.data[i].description} | \n                          Type : ${result.data[i].type} | \n                          Views : ${result.data[i].views} | \n                          Vote : ${result.data[i].vote} | \n                          Account Url : ${result.data[i].account_url} | \n                          Account Id : ${result.data[i].account_id} | \n                          Tags : ${result.data[i].tags} | \n                          Width : ${result.data[i].width} | \n                          Height : ${result.data[i].height} | \n                          Name : ${result.data[i].name} | \n                          Link : ${result.data[i].link}`)\n          }\n        this.setState({\n            imgLinks: tmpLink,\n            imgInformations: tmpInfo});\n          }\n        })\n      .catch(error => {console.log(\"error : \",error); this.setState({isDataLoaded:false})});\n    */\n    if (this.state.isDataLoaded){\n      this.interval = setInterval(() => this.updateCountDown(), 1000);\n    }\n  }\n\n  changeBackgroundImage() {\n    if (!this.state.pause){\n      let newCurrentImg = 0;\n      const images = this.state.imgLinks;\n      const currentImg = this.state.currentImage\n      const noOfImages = images.length;\n\n      if (currentImg !== noOfImages - 1) {\n        newCurrentImg = currentImg + 1;\n      }\n      this.setState({currentImage: newCurrentImg});\n      this.updateCountDown();\n    }\n  }\n\n  handleImageClick = () => {\n    this.setState({pause : !this.state.pause});\n  }\n\n  handleButtonClick = () => {\n    this.setState({AlbumHash: this.state.userInput})\n    console.log(this.state.AlbumHash)\n    this.fetchDataFromImgur()\n  }\n\n  handleInputChange = (event) =>{\n    this.setState({userInput : event.target.value})\n  }\n\n\n  render(){    \n    const dataLoaded = this.state.isDataLoaded;\n    console.log(\"is data loaded : \", dataLoaded)\n    if (!dataLoaded){\n      return (\n        <div className='App'>\n        <h1>Type an Albumhash below</h1>\n        <input type=\"text\" onChange={ this.handleInputChange } />\n        <input\n          type=\"button\"\n          value=\"Search\"\n          onClick={this.handleButtonClick}\n        />\n        <div>\n        Data loading failed, please try again\n        </div>\n        </div>\n      );\n    }\n    else{\n    return (\n      <div className='App'>\n        <h1>Type an Albumhash below</h1>\n        <div><input /></div>\n      <div><b>Timer : 00:0{this.state.timer} Seconds</b></div>\n      <button><img src={this.state.imgLinks[this.state.currentImage]} onClick={this.handleImageClick}/></button>\n      <div>\n        <b>{this.state.pause ? this.state.imgInformations[this.state.currentImage] : 'Click on the Image to show More informations'}</b>\n      </div>\n      </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}