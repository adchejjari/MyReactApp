{"ast":null,"code":"var _jsxFileName = \"/home/ad/Bureau/js learning/myapp/src/App.js\";\nimport './App.css';\nimport { Component } from 'react';\nimport React from 'react'; //import Research from './Research'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleImageClick = () => {\n      this.setState({\n        pressed: !this.state.pressed\n      });\n    };\n\n    this.state = {\n      items: {},\n      size: 0,\n      currentImage: 0,\n      imgLinks: [],\n      pressed: false,\n      timer: 3\n    };\n  }\n\n  updateCountDown() {\n    if (!this.state.pressed) {\n      this.setState({\n        timer: this.state.timer--\n      });\n      console.log(\"updated\"); //if(this.state.timer==-1){\n      //this.changeBackgroundImage();\n      //}\n    }\n  }\n  /*\n    componentWillUnmount() {\n      if (this.interval) {\n        clearInterval(this.interval);\n      }\n    }*/\n\n\n  componentDidMount() {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Client-ID 2fe36512ef5b8e3\");\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(\"https://api.imgur.com/3/album/hvsj8LF/images\", requestOptions).then(response => response.json()).then(result => {\n      let tmp = [];\n\n      for (var i = 0; i < result.data.length; i++) {\n        tmp.push(result.data[i].link);\n      }\n\n      this.setState({\n        imgLinks: tmp\n      });\n    }).catch(error => console.log(error)); //if(this.state.timer == 0) {\n    //this.changeBackgroundImage()\n    //}\n  }\n\n  changeBackgroundImage() {\n    if (!this.state.pressed) {\n      let newCurrentImg = 0;\n      const images = this.state.imgLinks;\n      const currentImg = this.state.currentImage;\n      const noOfImages = images.length;\n\n      if (currentImg !== noOfImages - 1) {\n        newCurrentImg = currentImg + 1;\n      }\n\n      this.setState({\n        currentImage: newCurrentImg\n      }); //this.setState({timer : 3});\n    }\n  }\n\n  render() {\n    setInterval(this.updateCountDown(), 1000);\n    console.log(this.state.timer);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.timer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.imgLinks[this.state.currentImage],\n          onClick: this.handleImageClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ad/Bureau/js learning/myapp/src/App.js"],"names":["Component","React","App","constructor","props","handleImageClick","setState","pressed","state","items","size","currentImage","imgLinks","timer","updateCountDown","console","log","componentDidMount","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","tmp","i","data","length","push","link","catch","error","changeBackgroundImage","newCurrentImg","images","currentImg","noOfImages","render","setInterval"],"mappings":"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","sourcesContent":["import './App.css';\nimport { Component } from 'react';\nimport React from 'react';\n//import Research from './Research'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      items : {},\n      size : 0,\n      currentImage : 0,\n      imgLinks : [],\n      pressed : false, \n      timer : 3\n    };\n    \n  };\n\n  updateCountDown(){\n    if (!this.state.pressed){\n      this.setState({timer : this.state.timer--});\n      console.log(\"updated\")\n      //if(this.state.timer==-1){\n        \n        //this.changeBackgroundImage();\n      //}\n    }\n  }\n/*\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }*/\n\n  componentDidMount(){\n    \n    var myHeaders = new Headers();\n    myHeaders.append(\"Authorization\", \"Client-ID 2fe36512ef5b8e3\");\n    var requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n\n    fetch(\"https://api.imgur.com/3/album/hvsj8LF/images\", requestOptions)\n      .then(response => response.json())\n      .then((result) => {\n        let tmp = []\n        for (var i = 0; i < result.data.length; i++) {\n            tmp.push(result.data[i].link)\n          }\n        this.setState({\n            imgLinks: tmp});\n          })\n      .catch(error => console.log(error));\n    \n\n    \n    //if(this.state.timer == 0) {\n      //this.changeBackgroundImage()\n    //}\n    \n  }\n\n  changeBackgroundImage() {\n    \n    if (!this.state.pressed){\n      let newCurrentImg = 0;\n      const images = this.state.imgLinks;\n      const currentImg = this.state.currentImage\n      const noOfImages = images.length;\n\n      if (currentImg !== noOfImages - 1) {\n        newCurrentImg = currentImg + 1;\n      }\n      this.setState({currentImage: newCurrentImg});\n      //this.setState({timer : 3});\n    }\n  }\n\n  handleImageClick = () => {\n    this.setState({pressed : !this.state.pressed});\n  }\n\n  render(){    \n    setInterval(this.updateCountDown(),1000);\n    console.log(this.state.timer)\n    return (\n      <div className='App'>\n      <div>{this.state.timer}</div>\n      <button><img src={this.state.imgLinks[this.state.currentImage]} onClick={this.handleImageClick}/></button>\n      </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}